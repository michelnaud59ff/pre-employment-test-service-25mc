[tool.poetry]
name = "pre-employment-test-service"
version = "0.1.0"
description = ""
authors = ["NAUD Michel <michel.naud@autajon.com>"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.10"
fastapi = "^0.115.11"
sqlalchemy = "^2.0.39"
faker = "^37.0.2"
uvicorn = "^0.34.0"
rich = "^13.9.4"
ruff = "^0.11.1"
mypy = "^1.15.0"

[tool.ruff]
output-format = "concise"
target-version = "py311"
line-length = 120

[tool.ruff.lint]
select = [
    "F",  # Pyflakes
    "E", "W",  # pycodestyle
    "UP",  # pyupgrade
    "B",  # flake8-bugbear
    "I",  # isort
    "SIM",  # flake8-simplify
    "PL",  # Pylint

    # pydocstyle
    "D212",  # Multi-line docstring summary should start at the first line

    "N",  # pep8-naming
    "S",  # flake8-bandit
    "C4",  # flake8-comprehensions
    "PIE",  # flake8-pie
    "T20",  # flake8-print
    "PYI",  # flake8-pyi
    "PT",  # flake8-pytest-style
    "RET",  # flake8-return
    "ANN",  # flake8-annotations
    "SLF",  # flake8-self
    "RUF",  # Ruff-specific rules
]
ignore = [
    "B008",  # Do not perform function call in argument defaults
    "PLR0913",  # Too many arguments in function definition
    "N818",  # Exception name should be named with an Error suffix
    "PT006",  # Wrong type passed to first argument of `@pytest.mark.parametrize`
    "ANN204",   # Missing return type annotation for special method (__init__, __new__, and __call__)
    "ANN401",   # Dynamically typed expressions (typing.Any) are disallowed
]
exclude = [
    "app/migrations/*",
    "packages/*",
    "scripts/*",
    "var/*",
    ".venv/*",
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "S101",  #  Use of `assert` detected
    "PLR2004",  # Magic value used in comparison
]
"__init__.py" = [
    "PLC0414",  #  Aliases that do not rename the original package
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
# By default the bodies of untyped functions are not checked
check_untyped_defs = true
strict = true
exclude = [
    "app/migrations/*",
    "var/*",
    ".venv/*",
]
explicit_package_bases = true